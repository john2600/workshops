<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="7" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="1937" started-at="2016-04-22T03:05:51Z" finished-at="2016-04-22T03:05:52Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="1937" started-at="2016-04-22T03:05:51Z" finished-at="2016-04-22T03:05:52Z">
      <class name="com.southwest.training.test.TestMainMessage">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.southwest.training.test.TestMainMessage@5419f379]" name="setUp" is-config="true" duration-ms="1471" started-at="2016-04-21T22:05:51Z" finished-at="2016-04-21T22:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.southwest.training.test.TestMainMessage@5419f379]" name="setUp" is-config="true" duration-ms="50" started-at="2016-04-21T22:05:52Z" finished-at="2016-04-21T22:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldReturnExceptionWhenIsnull()[pri:0, instance:com.southwest.training.test.TestMainMessage@5419f379]" name="shouldReturnExceptionWhenIsnull" duration-ms="6" started-at="2016-04-21T22:05:52Z" finished-at="2016-04-21T22:05:52Z">
          <exception class="java.lang.Exception">
            <full-stacktrace>
              <![CDATA[java.lang.Exception
	at com.southwest.training.app.StrategyFactory.getService(StrategyFactory.java:31)
	at com.southwest.training.test.TestMainMessage.shouldReturnExceptionWhenIsnull(TestMainMessage.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnExceptionWhenIsnull -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.southwest.training.test.TestMainMessage@5419f379]" name="setUp" is-config="true" duration-ms="53" started-at="2016-04-21T22:05:52Z" finished-at="2016-04-21T22:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldReturnSomeMessageWhenBadRequestStratey()[pri:0, instance:com.southwest.training.test.TestMainMessage@5419f379]" name="shouldReturnSomeMessageWhenBadRequestStratey" duration-ms="3" started-at="2016-04-21T22:05:52Z" finished-at="2016-04-21T22:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnSomeMessageWhenBadRequestStratey -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.southwest.training.test.TestMainMessage@5419f379]" name="setUp" is-config="true" duration-ms="45" started-at="2016-04-21T22:05:52Z" finished-at="2016-04-21T22:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldReturnSomeMessageWhenBussinesRequestStratey()[pri:0, instance:com.southwest.training.test.TestMainMessage@5419f379]" name="shouldReturnSomeMessageWhenBussinesRequestStratey" duration-ms="29" started-at="2016-04-21T22:05:52Z" finished-at="2016-04-21T22:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnSomeMessageWhenBussinesRequestStratey -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.southwest.training.test.TestMainMessage@5419f379]" name="setUp" is-config="true" duration-ms="40" started-at="2016-04-21T22:05:52Z" finished-at="2016-04-21T22:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldReturnSomeMessageWhenCompleteStratey()[pri:0, instance:com.southwest.training.test.TestMainMessage@5419f379]" name="shouldReturnSomeMessageWhenCompleteStratey" duration-ms="2" started-at="2016-04-21T22:05:52Z" finished-at="2016-04-21T22:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnSomeMessageWhenCompleteStratey -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.southwest.training.test.TestMainMessage@5419f379]" name="setUp" is-config="true" duration-ms="51" started-at="2016-04-21T22:05:52Z" finished-at="2016-04-21T22:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldReturnSomeMessageWhenStrateyUnknown()[pri:0, instance:com.southwest.training.test.TestMainMessage@5419f379]" name="shouldReturnSomeMessageWhenStrateyUnknown" duration-ms="2" started-at="2016-04-21T22:05:52Z" finished-at="2016-04-21T22:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnSomeMessageWhenStrateyUnknown -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.southwest.training.test.TestMainMessage@5419f379]" name="setUp" is-config="true" duration-ms="62" started-at="2016-04-21T22:05:52Z" finished-at="2016-04-21T22:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldReturnetStrategyResultWhenStrategyFactoryRecivedSolverInstace()[pri:0, instance:com.southwest.training.test.TestMainMessage@5419f379]" name="shouldReturnetStrategyResultWhenStrategyFactoryRecivedSolverInstace" duration-ms="2" started-at="2016-04-21T22:05:52Z" finished-at="2016-04-21T22:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldReturnetStrategyResultWhenStrategyFactoryRecivedSolverInstace -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.southwest.training.test.TestMainMessage@5419f379]" name="setUp" is-config="true" duration-ms="37" started-at="2016-04-21T22:05:52Z" finished-at="2016-04-21T22:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="shouldSolverObjectBeNotNull()[pri:0, instance:com.southwest.training.test.TestMainMessage@5419f379]" name="shouldSolverObjectBeNotNull" duration-ms="3" started-at="2016-04-21T22:05:52Z" finished-at="2016-04-21T22:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldSolverObjectBeNotNull -->
      </class> <!-- com.southwest.training.test.TestMainMessage -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
